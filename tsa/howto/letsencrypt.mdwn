# How to get an X.509 certificate for your new name

## The letsencrypt-domains git repository

If not already done, clone git repos letsencrypt-domains and
backup-keys.

    git clone ssh://git@git-rw.torproject.org/admin/letsencrypt-domains
	cd letsencrypt-domains
	git clone pauli.torproject.org:/srv/puppet.torproject.org/git/tor-backup-keys.git backup-keys

## Add your new name and generate a private key

    $EDIT domains		# add your domain name and optional SAN(s)
	./bin/manage-backup-keys create   # see tor-passwords/000-backup-keys for the passphrase

## Push the new key to the backup-keys repo

    cd backup-keys
	git status
	git add $yourfiles
	git commit
	git push
	cd ..

## Push the updated domain list to the letsencrypt-domains repo

	git diff domains
	git add domains
	git commit
	git push

The last command will produce output from the `dehydrated` command
which talks with the DNS primary (currently `nevii`) to fetch new keys
and update old ones. (This happens on `/srv/letsencrypt` on the DNS
primary.)

The new keys and certs are being copied to the LDAP host
(currently `pauli`) under
`/srv/puppet.torproject.org/from-letsencrypt/`. Then [[Puppet]] pick
those up in the `ssl` module. Use the `ssl::service` resource to
deploy them.

See also [[static-component]] for an example of how to deploy an
encrypted virtual host and onion service.
